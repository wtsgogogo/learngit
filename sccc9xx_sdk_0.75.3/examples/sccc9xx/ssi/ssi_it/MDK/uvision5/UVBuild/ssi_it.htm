<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\UVBuild\ssi_it.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\UVBuild\ssi_it.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Thu Aug  3 08:52:15 2023
<BR><P>
<H3>Maximum Stack Usage =         48 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SSI_Handler &rArr; HAL_SSI_IRQHandler &rArr; assert
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[a]">Default_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">Default_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">BusFault_Handler</a> from startup_asm.o(.text) referenced from startup_asm.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_asm.o(.text) referenced from startup_asm.o(RESET)
 <LI><a href="#[a]">Default_Handler</a> from startup_asm.o(.text) referenced 43 times from startup_asm.o(RESET)
 <LI><a href="#[14]">EXTI_Handler</a> from soc_gpio.o(.text.EXTI_Handler) referenced 2 times from soc_gpio.o(.text.io_init)
 <LI><a href="#[10]">HAL_SSI_RxCpltCallback</a> from hal_ssi.o(.text.HAL_SSI_RxCpltCallback) referenced 2 times from hal_ssi.o(.text.HAL_SSI_IRQHandler)
 <LI><a href="#[16]">HAL_SSI_TxDMACpltCallback</a> from hal_ssi_dma.o(.text.HAL_SSI_TxDMACpltCallback) referenced 2 times from hal_ssi_dma.o(.text.ssi_tx_empty_dma_isr)
 <LI><a href="#[e]">HAL_SSI_TxRxCpltCallback</a> from main.o(.text.HAL_SSI_TxRxCpltCallback) referenced 2 times from hal_ssi.o(.text.HAL_SSI_IRQHandler)
 <LI><a href="#[f]">HAL_SSI_TxRxHalfDuplexCpltCallback</a> from hal_ssi.o(.text.HAL_SSI_TxRxHalfDuplexCpltCallback) referenced 2 times from hal_ssi.o(.text.HAL_SSI_IRQHandler)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_asm.o(.text) referenced from startup_asm.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_asm.o(.text) referenced from startup_asm.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_asm.o(.text) referenced from startup_asm.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_asm.o(.text) referenced from startup_asm.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_asm.o(.text) referenced from startup_asm.o(RESET)
 <LI><a href="#[11]">SSI_Handler</a> from msp_ssi.o(.text.SSI_Handler) referenced 2 times from msp_ssi.o(.text.HAL_SSI_MSP_Init)
 <LI><a href="#[6]">SVC_Handler</a> from rom_sym.txt(ABSOLUTE) referenced from startup_asm.o(RESET)
 <LI><a href="#[17]">SWINT_Handler_ASM</a> from swint_asm.o(.text.SWINT_Handler_ASM) referenced 2 times from platform.o(.text.sys_init_none)
 <LI><a href="#[12]">SWINT_Handler_C</a> from platform.o(.text.SWINT_Handler_C) referenced from swint_asm.o(.text.SWINT_Handler_ASM)
 <LI><a href="#[9]">SysTick_Handler</a> from systick.o(.xip_banned.SysTick_Handler) referenced 2 times from systick.o(.text.systick_start)
 <LI><a href="#[9]">SysTick_Handler</a> from systick.o(.xip_banned.SysTick_Handler) referenced from startup_asm.o(RESET)
 <LI><a href="#[c]">SystemInit</a> from platform.o(.text.SystemInit) referenced from startup_asm.o(.text)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_asm.o(.text) referenced from startup_asm.o(RESET)
 <LI><a href="#[13]">V33_EXTI_Async_Handler</a> from soc_gpio.o(.text.V33_EXTI_Async_Handler) referenced 2 times from soc_gpio.o(.text.io_init)
 <LI><a href="#[d]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_asm.o(.text)
 <LI><a href="#[15]">cpu_recover_asm</a> from sleep_asm.o(.xip_banned.sleep_recover_asm) referenced 2 times from sleep.o(.text.low_power_init)
 <LI><a href="#[b]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> startup_asm.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>arm_cm_delay_asm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_flash_init (via Veneer)
</UL>

<P><STRONG><a name="[d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_asm.o(.text)
</UL>
<P><STRONG><a name="[36]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[19]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[37]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[38]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[39]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[3a]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[3b]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_asm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_asm.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_asm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_asm.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_asm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_asm.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_asm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_asm.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_asm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_asm.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_asm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_asm.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_asm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_asm.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_asm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_asm.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[3c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[14]"></a>EXTI_Handler</STRONG> (Thumb, 522 bytes, Stack size 16 bytes, soc_gpio.o(.text.EXTI_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_exti_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> soc_gpio.o(.text.io_init)
</UL>
<P><STRONG><a name="[1d]"></a>HAL_SSI_IRQHandler</STRONG> (Thumb, 596 bytes, Stack size 40 bytes, hal_ssi.o(.text.HAL_SSI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_SSI_IRQHandler &rArr; assert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssi_tx_empty_dma_isr
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SSI_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSI_Handler
</UL>

<P><STRONG><a name="[21]"></a>HAL_SSI_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, hal_ssi.o(.text.HAL_SSI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SSI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SSI_MSP_Busy_Set
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SSI_MSP_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23]"></a>HAL_SSI_MSP_Busy_Set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, msp_ssi.o(.text.HAL_SSI_MSP_Busy_Set))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_status_set
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SSI_Init
</UL>

<P><STRONG><a name="[22]"></a>HAL_SSI_MSP_Init</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, msp_ssi.o(.text.HAL_SSI_MSP_Init))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SSI_Init
</UL>

<P><STRONG><a name="[10]"></a>HAL_SSI_RxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal_ssi.o(.text.HAL_SSI_RxCpltCallback))
<BR>[Address Reference Count : 1]<UL><LI> hal_ssi.o(.text.HAL_SSI_IRQHandler)
</UL>
<P><STRONG><a name="[2b]"></a>HAL_SSI_TransmitReceive_IT</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, hal_ssi.o(.text.HAL_SSI_TransmitReceive_IT))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20]"></a>HAL_SSI_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal_ssi.o(.text.HAL_SSI_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SSI_IRQHandler
</UL>

<P><STRONG><a name="[16]"></a>HAL_SSI_TxDMACpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal_ssi_dma.o(.text.HAL_SSI_TxDMACpltCallback))
<BR>[Address Reference Count : 1]<UL><LI> hal_ssi_dma.o(.text.ssi_tx_empty_dma_isr)
</UL>
<P><STRONG><a name="[e]"></a>HAL_SSI_TxRxCpltCallback</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, main.o(.text.HAL_SSI_TxRxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_SSI_TxRxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_ssi.o(.text.HAL_SSI_IRQHandler)
</UL>
<P><STRONG><a name="[f]"></a>HAL_SSI_TxRxHalfDuplexCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal_ssi.o(.text.HAL_SSI_TxRxHalfDuplexCpltCallback))
<BR>[Address Reference Count : 1]<UL><LI> hal_ssi.o(.text.HAL_SSI_IRQHandler)
</UL>
<P><STRONG><a name="[17]"></a>SWINT_Handler_ASM</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, swint_asm.o(.text.SWINT_Handler_ASM))
<BR>[Address Reference Count : 1]<UL><LI> platform.o(.text.sys_init_none)
</UL>
<P><STRONG><a name="[12]"></a>SWINT_Handler_C</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, platform.o(.text.SWINT_Handler_C))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SWINT_Handler_C
</UL>
<BR>[Address Reference Count : 1]<UL><LI> swint_asm.o(.text.SWINT_Handler_ASM)
</UL>
<P><STRONG><a name="[c]"></a>SystemInit</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, platform.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_asm.o(.text)
</UL>
<P><STRONG><a name="[13]"></a>V33_EXTI_Async_Handler</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, soc_gpio.o(.text.V33_EXTI_Async_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = V33_EXTI_Async_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_exti_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> soc_gpio.o(.text.io_init)
</UL>
<P><STRONG><a name="[1f]"></a>assert</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, dbg.o(.text.assert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = assert
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_global_irq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SSI_IRQHandler
</UL>

<P><STRONG><a name="[1c]"></a>io_exti_callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, soc_gpio.o(.text.io_exti_callback))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Handler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;V33_EXTI_Async_Handler
</UL>

<P><STRONG><a name="[2f]"></a>io_init</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, soc_gpio.o(.text.io_init))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init_none
</UL>

<P><STRONG><a name="[30]"></a>low_power_init</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, sleep.o(.text.low_power_init))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init_none
</UL>

<P><STRONG><a name="[b]"></a>main</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = main &rArr; pinmux_ssi_dq0_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SSI_TransmitReceive_IT
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SSI_Init
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinmux_ssi_dq1_init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinmux_ssi_dq0_init
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinmux_ssi_nss0_init
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinmux_ssi_clk_init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init_none
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cm_delay_asm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[27]"></a>pinmux_ssi_clk_init</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, soc_gpio.o(.text.pinmux_ssi_clk_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pinmux_ssi_clk_init
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29]"></a>pinmux_ssi_dq0_init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, soc_gpio.o(.text.pinmux_ssi_dq0_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pinmux_ssi_dq0_init
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>pinmux_ssi_dq1_init</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, soc_gpio.o(.text.pinmux_ssi_dq1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pinmux_ssi_dq1_init
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[28]"></a>pinmux_ssi_nss0_init</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, soc_gpio.o(.text.pinmux_ssi_nss0_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pinmux_ssi_nss0_init
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24]"></a>spi1_status_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sys_stat.o(.text.spi1_status_set))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SSI_MSP_Busy_Set
</UL>

<P><STRONG><a name="[2d]"></a>ssi_tx_done</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, hal_ssi.o(.text.ssi_tx_done))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssi_tx_empty_dma_isr
</UL>

<P><STRONG><a name="[1e]"></a>ssi_tx_empty_dma_isr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_ssi_dma.o(.text.ssi_tx_empty_dma_isr))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssi_tx_done
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SSI_IRQHandler
</UL>

<P><STRONG><a name="[26]"></a>sys_init_none</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, platform.o(.text.sys_init_none))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sys_init_none &rArr; clk_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_start
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_flash_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>systick_start</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, systick.o(.text.systick_start))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init_none
</UL>

<P><STRONG><a name="[3d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[3e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[3f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[18]"></a>cpu_sleep_asm</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sleep_asm.o(.xip_banned.sleep_recover_asm), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;before_wfi
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_msp_psp_control
</UL>

<P><STRONG><a name="[15]"></a>cpu_recover_asm</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sleep_asm.o(.xip_banned.sleep_recover_asm))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;after_wfi
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_msp_psp_control
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sleep.o(.text.low_power_init)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, systick.o(.xip_banned.SysTick_Handler))
<BR>[Address Reference Count : 2]<UL><LI> startup_asm.o(RESET)
<LI> systick.o(.text.systick_start)
</UL>
<P><STRONG><a name="[35]"></a>after_wfi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sleep.o(.xip_banned.after_wfi))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_recover_asm
</UL>

<P><STRONG><a name="[33]"></a>before_wfi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sleep.o(.xip_banned.before_wfi), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_sleep_asm
</UL>

<P><STRONG><a name="[2e]"></a>clk_flash_init</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, platform.o(.xip_banned.clk_flash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clk_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cm_delay_asm (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init_none (via Veneer)
</UL>

<P><STRONG><a name="[25]"></a>disable_global_irq</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.xip_banned.disable_global_irq))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert (via Veneer)
</UL>

<P><STRONG><a name="[34]"></a>restore_msp_psp_control</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, sleep.o(.xip_banned.restore_msp_psp_control))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_recover_asm
</UL>

<P><STRONG><a name="[32]"></a>store_msp_psp_control</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, sleep.o(.xip_banned.store_msp_psp_control), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_sleep_asm
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[11]"></a>SSI_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, msp_ssi.o(.text.SSI_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SSI_Handler &rArr; HAL_SSI_IRQHandler &rArr; assert
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SSI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msp_ssi.o(.text.HAL_SSI_MSP_Init)
</UL>
<P><STRONG><a name="[a]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_asm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_asm.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
